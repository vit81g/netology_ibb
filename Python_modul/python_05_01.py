"""
Домашнее задание к лекции 5.«Функции — использование встроенных и создание собственных»

Я работаю секретарем и мне постоянно приходят различные документы. Я должен быть очень внимателен чтобы не потерять ни один документ. Каталог документов хранится в следующем виде:

      documents = [
        {"type": "passport", "number": "2207 876234", "name": "Василий Гупкин"},
        {"type": "invoice", "number": "11-2", "name": "Геннадий Покемонов"},
        {"type": "insurance", "number": "10006", "name": "Аристарх Павлов"}
      ]

Перечень полок, на которых находятся документы хранится в следующем виде:

      directories = {
        '1': ['2207 876234', '11-2'],
        '2': ['10006'],
        '3': []
      }

Задача №1

Необходимо реализовать пользовательские команды, которые будут выполнять следующие функции:

    p – people – команда, которая спросит номер документа и выведет имя человека, которому он принадлежит;
    s – shelf – команда, которая спросит номер документа и выведет номер полки, на которой он находится;
    Правильно обработайте ситуации, когда пользователь будет вводить несуществующий документ.
    l– list – команда, которая выведет список всех документов в формате passport "2207 876234" "Василий Гупкин";
    a – add – команда, которая добавит новый документ в каталог и в перечень полок, спросив его номер, тип, имя владельца и номер полки, на котором он будет храниться. Корректно обработайте ситуацию, когда пользователь будет пытаться добавить документ на несуществующую полку.

Внимание: p, s, l, a - это пользовательские команды, а не названия функций. Функции должны иметь выразительное название, передающие её действие.
"""

# обявление переменных
documents = [
        {"type": "passport", "number": "2207 876234", "name": "Василий Гупкин"},
        {"type": "invoice", "number": "11-2", "name": "Геннадий Покемонов"},
        {"type": "insurance", "number": "10006", "name": "Аристарх Павлов"}
      ]

directories = {
        '1': ['2207 876234', '11-2'],
        '2': ['10006'],
        '3': []
      }

# def test1(students):
#     list1 = []
#     for student in students:
#         list1.append(student['number'])
#     return list1
#
# print(test1(documents))
#
# print(directories.values())
# a = directories.get('2')
# print(type(a))
# print(a[0])
#

#
# print("""p – people – команда, которая спросит номер документа и выведет имя человека, которому он принадлежит;
# s – shelf – команда, которая спросит номер документа и выведет номер полки, на которой он находится;
# Правильно обработайте ситуации, когда пользователь будет вводить несуществующий документ.
# l– list – команда, которая выведет список всех документов в формате passport "2207 876234" "Василий Гупкин";
# a – add – команда, которая добавит новый документ в каталог и в перечень полок, спросив его номер, тип,
# имя владельца и номер полки, на котором он будет храниться. Корректно обработайте ситуацию,
# когда пользователь будет пытаться добавить документ на несуществующую полку.
# """)

inputCommand = input("Выберите действие: ")
#
def workSecretar (command):
    """
    Выполняет извлечение из словаря данных по заданному условию:
    p – people – команда, которая спросит номер документа и выведет имя человека, которому он принадлежит;
    s – shelf – команда, которая спросит номер документа и выведет номер полки, на которой он находится;
    Правильно обработайте ситуации, когда пользователь будет вводить несуществующий документ.
    l– list – команда, которая выведет список всех документов в формате passport "2207 876234" "Василий Гупкин";
    a – add – команда, которая добавит новый документ в каталог и в перечень полок, спросив его номер, тип,
    имя владельца и номер полки, на котором он будет храниться. Корректно обработайте ситуацию,
    когда пользователь будет пытаться добавить документ на несуществующую полку.
    :param command:
    :return:
    """
    new_list = []
    if command == "p":
        numbers = input("Введите номер документа: ")
        # print(numbers, directories[numbers])
        list_var = directories.get(numbers)
        for i in documents:
            for k in i:
                # print(k)
                if i[k] in list_var:
                    new_list.append(i['name'])
        return " ".join(new_list)
    if command == "s":
        return 'работает'



print(workSecretar(inputCommand))



# main = workSecretar(inputCommand)